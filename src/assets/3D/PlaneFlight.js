/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useThree } from "@react-three/fiber";

import { motion } from "framer-motion-3d";
import { LoopOnce, Euler } from "three";

export default function Model({ clickHandler, ...props }) {
  const [scaleUp, setScaleUp] = useState(false);

  const group = useRef();
  const paperPlane = useRef();
  const { nodes, animations } = useGLTF("/plane_flight.gltf");
  const { actions, mixer } = useAnimations(animations, group);
  const { camera } = useThree();

  useEffect(() => {
    const flight = actions.flight;
    camera.setRotationFromEuler(new Euler(-Math.PI / 4, 0, 0, "XYZ"));
    flight.setLoop(LoopOnce);
    flight.clampWhenFinished = true;
    flight.play();
    mixer.timeScale = 1;
    mixer.addEventListener("finished", () => {
      setScaleUp(true);
    });
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <motion.mesh
          ref={paperPlane}
          name="Plane"
          geometry={nodes.Plane.geometry}
          material={nodes.Plane.material}
          position={[-1.67, 12.65, 8.86]}
          rotation={[3, 0.79, 2.94]}
          initial={{ scale: 1 }}
          animate={scaleUp ? { x: -12, scale: 2 } : {}}
          whileHover={{ scale: 2.5 }}
          onPointerEnter={() => {
            document.querySelector(".custom-cursor").classList.add("medium");
          }}
          onPointerLeave={() => {
            document.querySelector(".custom-cursor").classList.remove("medium");
          }}
          transition={{ type: "tween", duration: 2, ease: [0.25, 1, 0.5, 1] }}
          onClick={() => {
            document.querySelector(".custom-cursor").classList.remove("medium");
            clickHandler();
          }}
        >
          <motion.meshStandardMaterial
            attach="material"
            initial={{ color: "white" }}
            animate={{ color: "white" }}
          />
        </motion.mesh>
      </group>
    </group>
  );
}

useGLTF.preload("./plane_flight.gltf");
